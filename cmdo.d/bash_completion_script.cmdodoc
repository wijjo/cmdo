'''
# Bash command completion for {{CMDO.program.name}}
# Generated by "{{CMDO.program.name}} help bash_completion_script"

_{{CMDO.program.name}}_expand()
{
    [ "$cur" != "${cur%\\}" ] && cur="$cur\\"

    # expand ~username type directory specifications
    if {{'[[ "$cur" == \~*/* ]]'}}; then
        eval cur=$cur
    elif {{'[[ "$cur" == \~* ]]'}}; then
        cur=${cur#\~}
        COMPREPLY=( $( compgen -P '~' -u $cur ) )
        return ${#COMPREPLY[@]}
    fi
}

_{{CMDO.program.name}}_filedir()
{
    local IFS=$'\t\n' xspec #glob

    _{{CMDO.program.name}}_expand || return 0

    xspec=${1:+"!*.$1"}    # set only if glob passed in as $1
    COMPREPLY=( ${COMPREPLY[@]:-} $( compgen -f -X "$xspec" -- "$cur" ) \
            $( compgen -d -- "$cur" ) )
}

_{{CMDO.program.name}}_commands()
{
    local {{CMDO.program.name}}CMDS

    COMPREPLY=()

    {{CMDO.program.name}}CMDS="$({{CMDO.program.name}} bash_complete)"
    COMPREPLY=( $( compgen -W "${{CMDO.program.name}}CMDS" -- "$cur" ) )
}

_{{CMDO.program.name}}_count_args()
{
    args=1
    for (( i=1; i < COMP_CWORD; i++ )); do
        if {{'[[ "${COMP_WORDS[i]}" != -* ]]'}}; then
            args=$(($args+1))
        fi
    done
}

_{{CMDO.program.name}}()
{
    local cur
    cur=${COMP_WORDS[COMP_CWORD]}
    _{{CMDO.program.name}}_count_args

    case $args in
        1)
            _{{CMDO.program.name}}_commands
            ;;
        *)
            _{{CMDO.program.name}}_filedir
            ;;
    esac
}

complete -F _{{CMDO.program.name}} -o filenames {{CMDO.program.name}}
'''
